* using log directory '/mnt/tmp/RtmptNrE85/check_cran7387754e8f4/TeachingDemos.Rcheck'
* using R version 3.1.0 (2014-04-10)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: ASCII
* using option '--no-codoc'
* checking for file 'TeachingDemos/DESCRIPTION' ... OK
* this is package 'TeachingDemos' version '2.9'
* checking package namespace information ... OK
* checking package dependencies ... NOTE
Packages suggested but not available for checking: 'R2wd' 'EBImage'
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package 'TeachingDemos' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
Found an obsolete/platform-specific call in the following function:
  'triplot'
Found the platform-specific device:
  'win.graph'
dev.new() is the preferred way to open a new device, in the unlikely
event one is needed.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... NOTE
Rd file 'HWidentify.Rd':
  \usage lines wider than 90 characters:
     pt.col="red", adj=c(0,0), xlab = deparse(substitute(x)), ylab = deparse(substitute(y)), ...)

Rd file 'TkApprox.Rd':
  \usage lines wider than 90 characters:
     TkApprox(x, y, type = "b", snap.to.x = FALSE, digits = 4, cols = c("red", "#009900", "blue"), xlab = deparse(substitute(x)), ylab = dep ... [TRUNCATED]

Rd file 'TkBuildDist.Rd':
  \usage lines wider than 90 characters:
     TkBuildDist(x = seq(min + (max - min)/nbin/2, max - (max - min)/nbin/2, length.out = nbin), min = 0, max = 10, nbin = 10, logspline = T ... [TRUNCATED]

Rd file 'ci.examp.Rd':
  \usage lines wider than 90 characters:
     ci.examp(mean.sim = 100, sd = 10, n = 25, reps = 50, conf.level = 0.95, method = "z", lower.conf = (1 - conf.level)/2, upper.conf = 1 - ... [TRUNCATED]

Rd file 'correct.Rd':
  \usage lines wider than 90 characters:
     cor.rect.plot(x, y, corr = TRUE, xlab = deparse(substitute(x)), ylab = deparse(substitute(y)), col = c("#ff000055", "#0000ff55"), ...)

Rd file 'dynIdentify.Rd':
  \usage lines wider than 90 characters:
     dynIdentify(x, y, labels = seq_along(x), corners = cbind(c(-1, 0, 1, -1, 1, -1, 0, 1), c(1, 1, 1, 0, 0, -1, -1, -1)), ...)
     TkIdentify(x, y, labels=seq_along(x), hscale=1.75, vscale=1.75, corners = cbind( c(-1,0,1,-1,1,-1,0,1), c(1,1,1,0,0,-1,-1,-1) ),...)

Rd file 'gp.open.Rd':
  \usage lines wider than 90 characters:
     gp.splot(x,y,z, add=FALSE, title=deparse(substitute(z)), pipe=gpenv$gp, datafile=tempfile())

Rd file 'loess.demo.Rd':
  \usage lines wider than 90 characters:
     loess.demo(x, y, span = 2/3, degree = 1, nearest = FALSE, xlim = numeric(0), ylim = numeric(0), verbose = FALSE)

Rd file 'mle.demo.Rd':
  \usage lines wider than 90 characters:
     mle.demo(x = rnorm(10, 10, 2), start.mean = mean(x) - start.sd, start.sd = 1.2 * sqrt(var(x)))

Rd file 'shadowtext.Rd':
  \usage lines wider than 90 characters:
     shadowtext(x, y = NULL, labels, col = "white", bg = "black", theta = seq(pi/4, 2 * pi, length.out = 8), r = 0.1, ...)

Rd file 'sigma.test.Rd':
  \usage lines wider than 90 characters:
     sigma.test(x, sigma = 1, sigmasq = sigma^2, alternative = c("two.sided", "less", "greater"), conf.level = 0.95, ...)

Rd file 'slider.Rd':
  \usage lines wider than 90 characters:
     slider(sl.functions, sl.names, sl.mins, sl.maxs, sl.deltas, sl.defaults, but.functions, but.names, no, set.no.value, obj.name, obj.valu ... [TRUNCATED]

Rd file 'sliderv.Rd':
  \usage lines wider than 90 characters:
     sliderv(refresh.code, names, minima, maxima, resolutions, starts, title = "control", no = 0, set.no.value = 0)

Rd file 'triplot.Rd':
  \usage lines wider than 90 characters:
     dimnames(x)[[1]], legend = NULL, legend.split = NULL, inner = TRUE, inner.col = c("lightblue", "pink"), inner.lty = c(2, 3), add = FALS ... [TRUNCATED]

Rd file 'z.test.Rd':
  \usage lines wider than 90 characters:
     z.test(x, mu = 0, stdev, alternative = c("two.sided", "less", "greater"), sd = stdev, conf.level = 0.95, ...)

These lines will be truncated in the PDF manual.
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... SKIPPED
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of 'data' directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... [23s/23s] OK
Examples with CPU or elapsed time > 5s
        user system elapsed
simfun 9.341      0   9.343
NOTE: There were 3 notes.
