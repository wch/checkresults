=========================================================================
Reverse dependency check for RSQLite 1.0.0
Commit a5ee386852f000201e38db083aceed744db6050e
=========================================================================
 setting  value                       
 version  R version 3.1.1 (2014-07-10)
 system   x86_64, linux-gnu           
 ui       X11                         
 language (EN)                        
 collate  en_US.UTF-8                 
 tz       <NA>                        

 package    * version date       source                      
 bitops       1.0.6   2013-08-17 CRAN (R 3.1.0)              
 devtools   * 1.6     2014-09-23 CRAN (R 3.1.1)              
 digest       0.6.4   2013-12-03 CRAN (R 3.1.0)              
 httr         0.5     2014-09-02 Github (hadley/httr@5ecb5ef)
 memoise      0.2.1   2014-04-22 CRAN (R 3.1.0)              
 RCurl        1.96.0  2014-07-07 local                       
 rstudioapi   0.1     2014-03-27 CRAN (R 3.1.0)              
 stringr      0.6.2   2012-12-06 CRAN (R 3.1.0)              

archivist =============================================================== 
 


BatchExperiments ======================================================== 
 *  checking examples ... ERROR
Running examples in ‘BatchExperiments-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: addExperiments
> ### Title: Add experiemts to the registry.
> ### Aliases: Experiment addExperiments
> 
> ### ** Examples
> 
> ### EXAMPLE 1 ###
> reg = makeExperimentRegistry(id = "example1", file.dir = tempfile())
Creating dir: /tmp/RtmpMDoG8J/file10764dbd2dc7
Saving registry: /tmp/RtmpMDoG8J/file10764dbd2dc7/registry.RData
> 
> # Define a problem:
> # Subsampling from the iris dataset.
> data(iris)
> subsample = function(static, ratio) {
+   n = nrow(static)
+   train = sample(n, floor(n * ratio))
+   test = setdiff(seq(n), train)
+   list(test = test, train = train)
+ }
> addProblem(reg, id = "iris", static = iris,
+            dynamic = subsample, seed = 123)
Writing problem files: /tmp/RtmpMDoG8J/file10764dbd2dc7/problems/iris_static.RData, /tmp/RtmpMDoG8J/file10764dbd2dc7/problems/iris_dynamic.RData
> 
> # Define algorithm "tree":
> # Decision tree on the iris dataset, modeling Species.
> tree.wrapper = function(static, dynamic, ...) {
+   library(rpart)
+   mod = rpart(Species ~ ., data = static[dynamic$train, ], ...)
+   pred = predict(mod, newdata = static[dynamic$test, ], type = "class")
+   table(static$Species[dynamic$test], pred)
+ }
> addAlgorithm(reg, id = "tree", fun = tree.wrapper)
Writing algorithm file: /tmp/RtmpMDoG8J/file10764dbd2dc7/algorithms/tree.RData
> 
> # Define algorithm "forest":
> # Random forest on the iris dataset, modeling Species.
> forest.wrapper = function(static, dynamic, ...) {
+   library(randomForest)
+   mod = randomForest(Species ~ ., data = static, subset = dynamic$train, ...)
+   pred = predict(mod, newdata = static[dynamic$test, ])
+   table(static$Species[dynamic$test], pred)
+ }
> addAlgorithm(reg, id = "forest", fun = forest.wrapper)
Writing algorithm file: /tmp/RtmpMDoG8J/file10764dbd2dc7/algorithms/forest.RData
> 
> # Define problem parameters:
> pars = list(ratio = c(0.67, 0.9))
> iris.design = makeDesign("iris", exhaustive = pars)
> 
> # Define decision tree parameters:
> pars = list(minsplit = c(10, 20), cp = c(0.01, 0.1))
> tree.design = makeDesign("tree", exhaustive = pars)
> 
> # Define random forest parameters:
> pars = list(ntree = c(100, 500))
> forest.design = makeDesign("forest", exhaustive = pars)
> 
> # Add experiments to the registry:
> # Use  previously defined experimental designs.
> addExperiments(reg, prob.designs = iris.design,
+                algo.designs = list(tree.design, forest.design),
+                repls = 2) # usually you would set repls to 100 or more.
Adding 12 experiments / 24 jobs to DB.
Warning: 'dbBeginTransaction' is deprecated.
Use 'dbBegin' instead.
See help("Deprecated")
Error in (function (classes, fdef, mtable)  : 
  unable to find an inherited method for function ‘dbBegin’ for signature ‘"missing"’
Calls: addExperiments ... dbBeginTransaction -> dbBegin -> .valueClassTest -> is -> <Anonymous>
Execution halted 


BatchJobs =============================================================== 
 *  checking examples ... ERROR
Running examples in ‘BatchJobs-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: batchExpandGrid
> ### Title: Map function over all combinations.
> ### Aliases: batchExpandGrid
> 
> ### ** Examples
> 
> reg = makeRegistry(id = "BatchJobsExample", file.dir = tempfile(), seed = 123)
Creating dir: /tmp/Rtmpj3AYlX/file14db5dc4217e
Saving registry: /tmp/Rtmpj3AYlX/file14db5dc4217e/registry.RData
> f = function(x, y, z) x * y  + z
> batchExpandGrid(reg, f, x = 1:2, y = 1:3, more.args = list(z = 10))
Adding 6 jobs to DB.
Warning: 'dbBeginTransaction' is deprecated.
Use 'dbBegin' instead.
See help("Deprecated")
Error in (function (classes, fdef, mtable)  : 
  unable to find an inherited method for function ‘dbBegin’ for signature ‘"missing"’
Calls: batchExpandGrid ... dbBeginTransaction -> dbBegin -> .valueClassTest -> is -> <Anonymous>
Execution halted 


biglm =================================================================== 
 


caroline ================================================================ 
 


CITAN =================================================================== 
 


DBI ===================================================================== 
 *  checking examples ... ERROR
Running examples in ‘DBI-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: dbFetch
> ### Title: Fetch records from a previously executed query.
> ### Aliases: dbFetch dbFetch,DBIResult-method fetch
> 
> ### ** Examples
> 
> if (!require("RSQLite")) {
+ con <- dbConnect(RSQLite::SQLite(), ":memory:")
+ dbWriteTable(con, "mtcars", mtcars)
+ 
+ # Fetch all results
+ res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
+ dbFetch(res)
+ dbClearResult(res)
+ 
+ # Fetch in chunks
+ res <- dbSendQuery(con, "SELECT * FROM mtcars")
+ while (!dbHasCompleted(res)) {
+   chunk <- fetch(res, 10)
+   print(nrow(chunk))
+ }
+ dbClearResult(res)
+ dbDisconnect(con)
+ }
Loading required package: RSQLite
Failed with error:  ‘package ‘DBI’ 0.3.0 is loaded, but >= 0.3.1 is required by ‘RSQLite’’
Error in check_valid(res) : could not find function "dbIsValid"
Error in check_valid(dbObj) : could not find function "dbIsValid"
Calls: dbWriteTable ... is -> dbGetInfo -> dbGetInfo -> .local -> check_valid
Error in check_valid(res) : could not find function "dbIsValid"
Calls: dbWriteTable ... dbClearResult -> .valueClassTest -> is -> is -> check_valid
Execution halted
Warning: Closing open result set 


dplyr =================================================================== 
 *  checking examples ... ERROR
Running examples in ‘dplyr-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: copy_to.src_sql
> ### Title: Copy a local data fram to a sqlite src.
> ### Aliases: copy_to.src_sql
> 
> ### ** Examples
> 
> if (require("RSQLite") && require("RSQLite.extfuns")) {
+ db <- src_sqlite(tempfile(), create = TRUE)
+ 
+ iris2 <- copy_to(db, iris)
+ mtcars$model <- rownames(mtcars)
+ mtcars2 <- copy_to(db, mtcars, indexes = list("model"))
+ 
+ explain(filter(mtcars2, model == "Hornet 4 Drive"))
+ 
+ # Note that tables are temporary by default, so they're not
+ # visible from other connections to the same database.
+ src_tbls(db)
+ db2 <- src_sqlite(db$path)
+ src_tbls(db2)
+ }
Loading required package: RSQLite
Loading required package: DBI
Loading required package: RSQLite.extfuns
Error in if (.allows_extensions(db)) { : 
  missing value where TRUE/FALSE needed
Calls: src_sqlite ... dbi_connect -> dbi_connect.SQLiteDriver -> <Anonymous>
Execution halted 


ETLUtils ================================================================ 
 


filehashSQLite ========================================================== 
 


freqweights ============================================================= 
 


gcbd ==================================================================== 
 


marmap ================================================================== 
 *  checking running R code from vignettes ... ERROR
Errors in running code in vignettes:
when running code in ‘marmap.Rnw’
  ...

> require(RSQLite)
Loading required package: RSQLite
Loading required package: DBI

> setSQL(bathy = "png.xyz", sep = "\t")

  When sourcing ‘marmap.R’:
Error: unable to find an inherited method for function ‘dbConnect’ for signature ‘"character"’
Execution halted
 


MUCflights ============================================================== 
 


nutshell.bbdb =========================================================== 
 


nutshell ================================================================ 
 


pitchRx ================================================================= 
 


ProjectTemplate ========================================================= 
 *  checking tests ... ERROR
Running the tests in ‘tests/3.R’ failed.
Last 13 lines of output:
  +                                           'example_28.db'),
  +                        table = 'example_28')
  > write.dcf(sql.file, file = 'example_28.sql', width = 1000)
  > 
  > data.file <- 'example_28.sql'
  > filename <- 'example_28.sql'
  > variable.name <- ProjectTemplate:::clean.variable.name('example_28')
  > 
  > ProjectTemplate:::sql.reader(data.file, filename, variable.name)
  Loading required package: RSQLite
  Loading required package: DBI
  Error: length(row.names) == 1 is not TRUE
  Execution halted 


quantmod ================================================================ 
 


rangeMapper ============================================================= 
 *  checking Rd cross-references ... WARNING
Missing link or links in documentation object '99_RMQuery.Rd':
  ‘sqliteQuickSQL’

See the information in section 'Cross-references' of the 'Writing R
Extensions' manual.

*  checking examples ... ERROR
Running examples in ‘rangeMapper-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: rangeMap.start
> ### Title: Initiate/open a new rangeMapper project
> ### Aliases: rangeMap.start rangeMapStart rangeMap.open rangeMap
> ### Keywords: spatial
> 
> ### ** Examples
> 
> td = setwd(tempdir())
> 
> dbcon = rangeMap.start(file = "test.sqlite", overwrite = TRUE, dir = tempdir() )
Error: could not find function "sqliteQuickSQL"
Execution halted 


refGenome =============================================================== 
 


RObsDat ================================================================= 
 


rplexos ================================================================= 
 


RQDA ==================================================================== 
 *  checking Rd cross-references ... WARNING
Missing link or links in documentation object 'RQDAQuery.rd':
  ‘[RSQLite]{dbSendQuery-methods}’

See the information in section 'Cross-references' of the 'Writing R
Extensions' manual.
 


RSQLite.extfuns ========================================================= 
 *  checking examples ... ERROR
Running examples in ‘RSQLite.extfuns-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: RSQLite.extfuns-package
> ### Title: Math and String Extension Functions for RSQLite
> ### Aliases: RSQLite.extfuns-package RSQLite.extfuns
> ### Keywords: package
> 
> ### ** Examples
> 
> ## basic usage looks like this
> db <- dbConnect(SQLite(), dbname = ":memory:")
> init_extensions(db)
Error in if (.allows_extensions(db)) { : 
  missing value where TRUE/FALSE needed
Calls: init_extensions
Execution halted 


scrime ================================================================== 
 


SEERaBomb =============================================================== 
 


SGP ===================================================================== 
 


snplist ================================================================= 
 *  checking package dependencies ... ERROR
Package required but not available: ‘biomaRt’

See the information on DESCRIPTION files in the chapter ‘Creating R
packages’ of the ‘Writing R Extensions’ manual. 


sqldf =================================================================== 
 *  checking examples ... ERROR
Running examples in ‘sqldf-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: sqldf
> ### Title: SQL select on data frames
> ### Aliases: sqldf
> ### Keywords: manip
> 
> ### ** Examples
> 
> 
> #
> # These examples show how to run a variety of data frame manipulations
> # in R without SQL and then again with SQL
> #
> 
> # head
> a1r <- head(warpbreaks)
> a1s <- sqldf("select * from warpbreaks limit 6")
Error in if (.allows_extensions(db)) { : 
  missing value where TRUE/FALSE needed
Calls: sqldf -> init_extensions
Execution halted 


sqliter ================================================================= 
 


sqlutils ================================================================ 
 


SSN ===================================================================== 
 *  checking examples ... ERROR
Running examples in ‘SSN-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: BlockPredict
> ### Title: Block Predicton for Streams Data
> ### Aliases: BlockPredict
> 
> ### ** Examples
> 
> 
> library(SSN)
> # NOT RUN 
> # mf04 <- importSSN(system.file("lsndata/MiddleFork04.ssn", 
> #	        package = "SSN"), o.write = TRUE)
> # use SpatialStreamNetwork object mf04 that was already created
> data(mf04p)
> #make sure mf04p has the correct path, will vary for each users installation
> mf04p <- updatePath(mf04p, system.file("lsndata/MiddleFork04.ssn", package = "SSN"))
[1] "SSN path updated to /mnt/tmp/RtmpBbPyWP/check_cran6f221b80e252/SSN.Rcheck/SSN/lsndata/MiddleFork04.ssn"
> 
> ## NOT RUN Distance Matrix has already been created
> ## createDistMat(mf04)
> # mf04p <- importPredpts(mf04p, "Knapp", "ssn")
> # mf04p <- importPredpts(mf04p, "CapeHorn", "ssn")
> names(mf04p)
$Obs
 [1] "NCEASID"    "STREAMNAME" "HUC3"       "HUC4"       "COMID"     
 [6] "CUMDRAINAG" "AREAWTMAP"  "MAXELEVSMO" "SLOPE"      "NCEASID_"  
[11] "ELEV_DEM"   "Deployment" "SampleYear" "NumberOfDa" "OriginalID"
[16] "Source"     "Summer_mn"  "MaxOver20"  "C16"        "C20"       
[21] "C24"        "FlowCMS"    "AirMEANc"   "AirMWMTc"   "NEAR_FID"  
[26] "NEAR_DIST"  "NEAR_X"     "NEAR_Y"     "NEAR_ANGLE" "rid"       
[31] "ratio"      "afvArea"    "upDist"     "locID"      "netID"     
[36] "pid"       

$pred1km
 [1] "COMID"      "GNIS_NAME"  "CUMDRAINAG" "HUC3"       "HUC4"      
 [6] "AREAWTMAP"  "MAXELEVSMO" "SLOPE"      "COMID_"     "ELEV_DEM"  
[11] "FlowCMS"    "AirMEANc"   "AirMWMTc"   "SampleYear" "NEAR_FID"  
[16] "NEAR_DIST"  "NEAR_X"     "NEAR_Y"     "NEAR_ANGLE" "rid"       
[21] "ratio"      "afvArea"    "upDist"     "locID"      "netID"     
[26] "pid"       

$Knapp
 [1] "COMID"      "GNIS_NAME"  "CUMDRAINAG" "HUC3"       "HUC4"      
 [6] "AREAWTMAP"  "MAXELEVSMO" "SLOPE"      "COMID_"     "ELEV_DEM"  
[11] "FlowCMS"    "AirMEANc"   "AirMWMTc"   "SampleYear" "NEAR_FID"  
[16] "NEAR_DIST"  "NEAR_X"     "NEAR_Y"     "NEAR_ANGLE" "rid"       
[21] "ratio"      "afvArea"    "upDist"     "locID"      "netID"     
[26] "pid"       

$CapeHorn
 [1] "COMID"      "GNIS_NAME"  "CUMDRAINAG" "HUC3"       "HUC4"      
 [6] "AREAWTMAP"  "MAXELEVSMO" "SLOPE"      "COMID_"     "ELEV_DEM"  
[11] "FlowCMS"    "AirMEANc"   "AirMWMTc"   "SampleYear" "NEAR_FID"  
[16] "NEAR_DIST"  "NEAR_X"     "NEAR_Y"     "NEAR_ANGLE" "rid"       
[21] "ratio"      "afvArea"    "upDist"     "locID"      "netID"     
[26] "pid"       

> ## NOTE: need the amongpreds distance matrices for block prediction
> #createDistMat(mf04p, predpts = "Knapp", o.write = TRUE, amongpreds = TRUE)
> # just do CapeHorn Example
> createDistMat(mf04p, predpts = "CapeHorn", o.write = TRUE, amongpreds = TRUE)
Error in createDistMat(mf04p, predpts = "CapeHorn", o.write = TRUE, amongpreds = TRUE) : 
  could not find function "sqliteCloseConnection"
Execution halted 


survey ================================================================== 
 


taRifx ================================================================== 
 


TSSQLite ================================================================ 
 


TSsql =================================================================== 
 


UPMASK ================================================================== 
 


