BatchExperiments *  checking examples ... ERROR
Running examples in ‘BatchExperiments-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: addExperiments
> ### Title: Add experiemts to the registry.
> ### Aliases: Experiment addExperiments
> 
> ### ** Examples
> 
> ### EXAMPLE 1 ###
> reg = makeExperimentRegistry(id = "example1", file.dir = tempfile())
Creating dir: /tmp/RtmpMDoG8J/file10764dbd2dc7
Saving registry: /tmp/RtmpMDoG8J/file10764dbd2dc7/registry.RData
> 
> # Define a problem:
> # Subsampling from the iris dataset.
> data(iris)
> subsample = function(static, ratio) {
+   n = nrow(static)
+   train = sample(n, floor(n * ratio))
+   test = setdiff(seq(n), train)
+   list(test = test, train = train)
+ }
> addProblem(reg, id = "iris", static = iris,
+            dynamic = subsample, seed = 123)
Writing problem files: /tmp/RtmpMDoG8J/file10764dbd2dc7/problems/iris_static.RData, /tmp/RtmpMDoG8J/file10764dbd2dc7/problems/iris_dynamic.RData
> 
> # Define algorithm "tree":
> # Decision tree on the iris dataset, modeling Species.
> tree.wrapper = function(static, dynamic, ...) {
+   library(rpart)
+   mod = rpart(Species ~ ., data = static[dynamic$train, ], ...)
+   pred = predict(mod, newdata = static[dynamic$test, ], type = "class")
+   table(static$Species[dynamic$test], pred)
+ }
> addAlgorithm(reg, id = "tree", fun = tree.wrapper)
Writing algorithm file: /tmp/RtmpMDoG8J/file10764dbd2dc7/algorithms/tree.RData
> 
> # Define algorithm "forest":
> # Random forest on the iris dataset, modeling Species.
> forest.wrapper = function(static, dynamic, ...) {
+   library(randomForest)
+   mod = randomForest(Species ~ ., data = static, subset = dynamic$train, ...)
+   pred = predict(mod, newdata = static[dynamic$test, ])
+   table(static$Species[dynamic$test], pred)
+ }
> addAlgorithm(reg, id = "forest", fun = forest.wrapper)
Writing algorithm file: /tmp/RtmpMDoG8J/file10764dbd2dc7/algorithms/forest.RData
> 
> # Define problem parameters:
> pars = list(ratio = c(0.67, 0.9))
> iris.design = makeDesign("iris", exhaustive = pars)
> 
> # Define decision tree parameters:
> pars = list(minsplit = c(10, 20), cp = c(0.01, 0.1))
> tree.design = makeDesign("tree", exhaustive = pars)
> 
> # Define random forest parameters:
> pars = list(ntree = c(100, 500))
> forest.design = makeDesign("forest", exhaustive = pars)
> 
> # Add experiments to the registry:
> # Use  previously defined experimental designs.
> addExperiments(reg, prob.designs = iris.design,
+                algo.designs = list(tree.design, forest.design),
+                repls = 2) # usually you would set repls to 100 or more.
Adding 12 experiments / 24 jobs to DB.
Warning: 'dbBeginTransaction' is deprecated.
Use 'dbBegin' instead.
See help("Deprecated")
Error in (function (classes, fdef, mtable)  : 
  unable to find an inherited method for function ‘dbBegin’ for signature ‘"missing"’
Calls: addExperiments ... dbBeginTransaction -> dbBegin -> .valueClassTest -> is -> <Anonymous>
Execution halted